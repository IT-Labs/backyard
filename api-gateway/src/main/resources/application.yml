sample:
    internal-api: http://localhost:5001/
server:
    port: 5000
info:
    app:
        description: playground application
        name: Spring Backyard API Gateway Application
    java-vendor: ${java.specification.vendor}
logging:
    level:
        root: DEBUG
spring:
    cache:
        type: redis
    redis:
        host: localhost
        port: 6378
    cloud:
        gateway:
            httpclient:
                connect-timeout: 20
#    security:
#        oauth2:
#            client:
#                provider:
#                    keycloak:
#                        token-uri: http://localhost:6180/auth/realms/master/protocol/openid-connect/token
#                        authorization-uri: http://localhost:6180/auth/realms/master/protocol/openid-connect/auth
#                        userinfo-uri: http://localhost:6180/auth/realms/master/protocol/openid-connect/userinfo
#                        user-name-attribute: preferred_username
#                registration:
#                    keycloak-sample:
#                        provider: keycloak
#                        client-id: keycloak-sample-client
#                        client-secret: c6480137-1526-4c3e-aed3-295aabcb7609
#                        authorization-grant-type: authorization_code
#                        redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
management:
    endpoint:
        health:
            cache:
                time-to-live: 30s
            show-details: always
    endpoints:
        web:
            base-path: /v1/actuator
            exposure:
                include: '*'
